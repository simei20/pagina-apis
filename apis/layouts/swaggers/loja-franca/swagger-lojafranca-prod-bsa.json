{
  "host": "apigateway.serpro.gov.br",
  "security": [
    {
      "Bearer": []
    }
  ],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "swagger": "2.0",
  "info": {
    "version": "1",
    "title": "Integra Loja Franca de Fronteira",
    "description": "### Códigos de Retorno não Tarifados \n|  Código de retorno |  Resumido |  Explicação |\n| ------------- |--------------------|----------------------------------------------------------------------------- |\n|400           | Requisição inválida    | O parâmetro de entrada informado não é válido.       |\n| 404           | Not found    | O parâmetro de entrada informado não foi encontrado.  |\n| 500           | Erro no Servidor | Ocorreu algum erro no servidor.      | \n<br>\n ## Campo cabeçalho da requisição (X-Request-Tag)\n\n  Este campo é opcional na utilização das chamadas às APIs / Datavalid e serve como identificador de requisições. Caso uma empresa necessite, por exemplo, agrupar a quantidade de requisições realizadas por cada departamento, poderá utilizar este campo de forma a identificar no faturamento a quantidade de requisições de cada item agrupador. \n<br><br>\n O campo é de texto livre (string até 32 caracteres) e não possui validação de seu conteúdo. Cabe, portanto, ao cliente manter o controle das informações que são enviadas para esse campo de forma que o relatório de faturamento faça o agrupamento adequado. \n<br><br>\n Este atributo pode ser usado pela entidade de classe e/ou grupo econômico na modalidade global com ônus entidade para fins de identificação do associado que realiza a requisição. No caso de entidades de classe ou grupos econômicos que realizem a contratação com ônus para o associado não é necessário realizar o agrupamento pois cada associado irá possuir sua própria chave de consumo. \n<br>\n ### Endereço de Produção \nhttps://apigateway.serpro.gov.br/api-loja-franca/api/\n    \n<br>\n### Endereço de Degustação\nhttps://apígateway.serpro.gov.br/api-loja-franca-trial/api/"
  },
  "basePath": "/api-loja-franca/api",
  "paths": {
    "Descrição": {
      "head": {
        "tags": [
          "Introdução"
        ],
        "summary": "API Integra Loja Franca de Fronteira",
        "description": " ## Orientações da RFB ## \n Verificar Documentação da API (modelo de dados para integração) no site da RFB, parágrafo `COMO INTEGRA A LOJA FRANCA DE FRONTEIRA ÀS BASES DA RECEITA FEDERAL` acessando o link abaixo: \n\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; http://receita.economia.gov.br/orientacao/aduaneira/regimes-e-controles-especiais/regimes-aduaneiros-especiais/loja-franca\n<br>\n----------------\n ## Modelo de Dados ## \n O modelo de dados para integração dos sistemas das lojas francas de fronteira terrestre com os serviços da Receita Federal pode ser consultado &nbsp; [aqui.](http://receita.economia.gov.br/orientacao/aduaneira/regimes-e-controles-especiais/regimes-aduaneiros-especiais/formularios-loja-franca/Novomodelodedados.pdf)  \n<br>\n----------------\n ## API ##\n<br> A `API INTEGRA LOJA FRANCA` é disponibilizada através de serviço `HTTP REST`, oferencendo operações para o processo de vendas das Lojas Francas de Fronteira.\n<br><br> Consolidamos aqui as informações técnicas para a integração dos sistemas próprios das lojas francas com os serviços da Receita Federal do Brasil para as Lojas Francas de Fronteira.\n<br><br> Todos os serviços seguem o mesmo protocolo de acesso, baseado nas instruções de uso e contratação do serviço API Serpro. A API do Loja Franca de Fronteira foi desenvolvida baseada na arquitetura `HTTP REST`. Ela trabalha exclusivamente com o formato JSON - UTF-8. \n<br><br> Destacamos que o sistema foi implementado recentemente para as lojas francas prepararem as adaptações necessárias aos seus sistemas próprios, podendo ainda ocorrer instabilidades pontuais. Caso haja dúvidas relacionadas à API do Loja Franca de Fronteira ou para problemas relacionados à TI, entre em contato com a Central Serpro de Atendimento.\n<br><br>  Esperamos que a API do Loja Franca de Fronteira melhore o ambiente de negócios das lojas francas, viabilizando a operação das lojas, aumentando a competitividade e diminuindo os custos acessórios envolvidos.\n<br>\n----------------\n## Autenticação ## \n<br> Para testar o ambiente de degustação da API, não é necessário realizar contratação prévia. O arquivo com as credenciais de acesso, informações de fluxo e exemplos podem ser solicitadas através do formulário de atendimento no link abaixo:\n\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; https://atendimento.serpro.gov.br/integralojafranca/credenciais\n\n No ambiente produtivo, para garantir a identificação e a segurança da origem da informação, toda requisição da API deve seguir três processos:\n<br><br> 1) Assinar a requisição com o seu conteúdo anexado mediante a utilização do certificado digital e-CNPJ (cadeia ICP Brasil) da contratante;\n<br><br> 2) Submeter a mensagem assinada mediante a apresentação da chave de acesso da API gateway válida (gerada a partir das credencias disponibilizadas no portal do cliente para cada CNPJ) e\n<br><br> 3) Verificar a assinatura da requisição, checando se o certificado é válido e não revogado.\n\n Assim, a cada requisição realizada, haverá Validação de Origem que realizará o batimento entre o CNPJ Comercial (CNPJ vinculado as credencias do portal do cliente), CNPJ de Autenticidade (CNPJ assinante da requisição) garantido a irretratabilidade (não repúdio) no nível em cada requisição.\n<br><br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  http://devserpro.github.io/apis/ \n<br>\n----------------\n ## Contratação ##\n<br> Para consumir a API é necessário utilizar as credenciais de acesso `CONSUMER KEY` e `CONSUMER SECRET` disponibilizados no portal do cliente: \n<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  https://cliente.serpro.gov.br\n<br><br> Exemplo de código:\n<br><br> `Consumer Key: djaR21PGoYp1iyK2n2ACOH9REdUb`\n<br>`Consumer Secret: ObRsAJWOL4fv2Tp27D1vd8fB3Ote`\n<br>\n----------------\n## Token de Acesso (Bearer) ##\n<br> Para consultar a API, é necessário obter um token de acesso temporário (Bearer). Esse token possui um tempo de validade e sempre que expirado, este passo de requisição de um novo token de acesso deve ser repetido.\n<br><br> Para solicitar o token temporário, é necessário realizar uma requisição HTTP POST para o endpoint Token (https://apigateway.serpro.gov.br/token), informando as credenciais de acesso no formato consumerKey:consumerSecret no HTTP Header Authorization, no formato base64, formato este que é utilizado para criptografar as credenciais de acesso e com isso garantir sigilo no tráfego de rede.\n<br><br> Após isso feito, será gerada uma chave hash (Bearer token) que deverá ser passada no header das requisições que serão efetuadas. Este header segue o seguinte formato:\n\n`Authorization: Bearer <hash>`\n<br>\n---------------\n## Payload ##\n<br> Todo o conteúdo a ser enviado para a API do Loja Franca deverá ser assinado.\n\nPorém, antes de enviar o conteúdo assinado, o mesmo deve seguir o Formato de mensagem JSON padrão.\n<br>\n<strong> Formato de mensagem JSON padrão </strong>\n\nA indicação de qual serviço será disparado se dará através do repasse do endpoint que representa cada serviço. \n<br>\n### Exemplo\n    {\n      \"servico\": \"// endpoint do serviço a ser chamado\",\n      \"dados\": {\n        \"// JSON de entrada de cada serviço\"\n      }\n    }\n\n<strong> Exemplo de entrada a assinar para a operação Processa venda viajante </strong>\n\nO JSON segue o formato documentado por operação e o mesmo fica encapsulado dentro da propriedade \"dados\".\n### Exemplo\n    {\n      \"servico\": \"/venda\",\n      \"dados\" : {\n        \"valorTotalItensImportados\": 10,\n        \"valorTotalItensNacionais\": 0,\n        \"valorCotacaoLoja\": 3.24,\n        \"viajanteParametro\": {\n          \"cpf\": \"00000000191\",\n          \"documento\": {\n            \"codigoPaisOrigem\": 105,\n            \"codigoTipo\": 1,\n            \"numero\": \"12345\"\n          }\n        }\n      }\n    }\n<br>\n<strong> Exemplo de entrada assinada para a operação Processa venda viajante </strong>\n\nO JSON foi assinado e criptografado em base64.\n### Exemplo\n    POST /api/\n    HEADER\n    Authorization: Bearer 953bae789a1726734005d238e939c978\n\n    BODY/PAYLOAD\n    \n    MIAGCSqGSIb3DQEHAqCAMIACAQExDzANBglghkgBZQMEAgMFADCABgkqhkiG9w0BBwEAAKCAMIIG6jCCBNKgAwIBAgIDApVmMA0GCSqGSIb3DQEBCwUAMIGVMQswCQYDVQQGEwJCUjETMBEGA1UECgwKSUNQLUJyYXNpbDE7MDkGA1UECwwyU2VydmljbyBGZWRlcmFsIGRlIFByb2Nlc3NhbWVudG8gZGUgRGFkb3MgLSBTRVJQUk8xNDAyBgNVBAMMK0F1dG9yaWRhZGUgQ2VydGlmaWNhZG9yYSBkbyBTRVJQUk8gRmluYWwgdjUwHhcNMTcwODAyMTI0OTA2WhcNMjAwODAxMTI0OTA2WjCBoTELMAkGA1UEBhMCQlIxEzARBgNVBAoMCklDUC1CcmFzaWwxGTAXBgNVBAsMEFBlc3NvYSBGaXNpY2EgQTMxETAPBgNVBAsMCEFSU0VSUFJPMSswKQYDVQQLDCJBdXRvcmlkYWRlIENlcnRpZmljYWRvcmEgU0VSUFJPQUNGMSIwIAYDVQQDDBlMVUlaIENBUkxPUyBTSUxWRUlSQSBIT1BGMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAi8YM8VcBZq7DImG6dov33SR\n<br>\n\n----------------\n ## Payload C-Sharp ##\n<br> Para assinatura do payload na linguagem C# siga as orientações do arquivo abaixo: \n\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  [assinador-exemplo-serpro-csharp.zip](https://github.com/devserpro/apis/raw/master/portal-desenvolvedor/apis/documentos/assinador-exemplo-serpro-csharp.zip) \n<br><br>  O exemplo deste arquivo em C# para assinatura segui o padrão ADRB 2.2. <br><br> \n ### Observações: \n 1- Este exemplo é uma aplicação standalone que utiliza a biblioteca BouncyCastle 1.8.3 \n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(http://www.bouncycastle.org/csharp/). <br><br> \n  2- A variável entradaArray contém os dados de entrada simulado através de um arquivo neste exemplo. <br> <br>\n 3- O dado de saída que deverá ser utilizado na API Loja Franca é obtido da seguinte instrução no código de exemplo: Convert.ToBase64String(dadosAssinado.GetEncoded()"
      }
    },
    "contentType": "application/json ; charset=UTF-8",
    "consumes": [
      "application/json"
    ],
    "schemes": [
      "https"
    ]
  }
}
